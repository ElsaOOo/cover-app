# This is a basic workflow to help you get started with Actions

name: build and deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 第一步：下载源码（CI/CD拉取代码到自己的本地）
      - name: Checkout
        uses: actions/checkout@main

      # 第二步：打包构建
      - name: Build
        uses: actions/setup-node@main
      - run: npm install # 安装第三方包
      - run: npm run build # 打包
      - run: tar -zcvf release.tgz dist
        # 把dist等文件，打包压缩为release.tgz


      # 第三步：发布 Release
      - name: Create Release # 创建Release，可以在仓库看到一个个版本
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
        with:
          tag_name: ${{ github.ref }} # (tag)标签名称
          release_name: Release ${{ github.ref }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布

        # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
          asset_path: ./release.tgz # 要上传文件
          asset_name: release.tgz # 上传后的文件名
          asset_content_type: application/x-tgz

        # 第五步：部署到服务器
      - name: Deploy
        uses: appleboy/ssh-action@master # 使用ssh链接服务器
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
            
